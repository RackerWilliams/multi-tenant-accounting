<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE article [
        <!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash  "&#x2013;">
        <!ENTITY mdash  "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY HEAD   '<command xmlns="http://docbook.org/ns/docbook">HEAD</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

        <!ENTITY CODES       'Normal Response Code(s):'>
        <!ENTITY ERROR_CODES 'Error Response Code(s):'>

        <!ENTITY LONG_URI_REFHEAD '
          <thead xmlns="http://docbook.org/ns/docbook">
            <tr>
              <td colspan="1">Verb</td>
              <td colspan="4">URI</td>
              <td colspan="3">Description</td>
            </tr>
          </thead>'>
        <!ENTITY URI_REFHEAD '
          <thead xmlns="http://docbook.org/ns/docbook">
            <tr>
              <td colspan="1">Verb</td>
              <td colspan="1">URI</td>
              <td colspan="4">Description</td>
            </tr>
          </thead>'>


        <!-- Useful for specs -->
        <!ENTITY MAY    '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MAY</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>
        <!ENTITY SHOULD_NOT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD NOT</emphasis>'>

]>

<article version="5.0"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook"
         class="specification"
         status="draft">
    <info>
        <title>Multi-Tenancy in OpenStack</title>
        <authorgroup>
            <author>
                <personname>
                    <firstname>Jorge</firstname>
                    <surname>Williams</surname>
                    <othername role="mi">L</othername>
                </personname>
                <email>jorge.williams@rackspace.com</email>
            </author>
            <author>
                <personname>
                    <firstname>Ziad</firstname>
                    <surname>Sawalha</surname>
                    <othername role="mi">N</othername>
                </personname>
                <email>ziad.sawalha@rackspace.com</email>
            </author>
            <author>
                <personname>
                    <firstname>Khaled</firstname>
                    <surname>Hussein</surname>
                </personname>
                <email>khaled.hussein@rackspace.com</email>
            </author>
        </authorgroup>
        <abstract>
            <para>
                As a cloud computing platform, OpenStack must support
                the concept of multi-tenancy. A common approach to
                organizing resources by 'tenant' across services is
                needed to be able to correlate usage tracking,
                auditing, authorization, etc... And within each
                multi-tenant service, the ability to identify each
                tenant's resources (for various reasons such as
                security, accounting, isolation, etcâ€¦) is also
                key. However, the definition of a 'tenant' will vary
                by operator and by deployment. This blueprint
                therefore proposes creating a lightweight standard for
                service developers to implement tenancy and resource
                grouping without a-priori knowledge of billing and
                accounting processes specific to the operator of an
                OpenStack deployment.
            </para>
            <para>
                The purpose of this blueprint is to define a standard
                method of organizing resources in OpenStack. Resource
                organization is important because most cloud service
                deployments are multi-tenant. Building multi-tenant
                services is complicated and often involves knowledge
                of buisness processes that vary from one organization
                to another. In this blueprint, we propose a method of
                organizing resources that allows multi-tenancy to be
                implemented on top of OpenStack services. This
                approach will lower barriers to service deleopers by
                allowing them to develop services without a-priori
                knowledge of billing and accounting processes of the
                organization in which the services are
                deployed. Likewise, organization will be given
                flexability in the manner in which they deploy and
                offer OpenStack services.
            </para>
        </abstract>
        <keywordset>
            <keyword>OpenStack</keyword>
            <keyword>Multi-Tenancy</keyword>
            <keyword>Resource Organization</keyword>
        </keywordset>
    </info>
    <section>
        <title>Rationale and Goals</title>
        <para>
        </para>
    </section>
    <section>
        <title>Specification Overview</title>
        <para>
        </para>
        <figure xml:id="both">
            <title>Multi-Tenancy Overview</title>
            <mediaobject>
                <imageobject>
                    <imagedata align="center" scale="65" format="svg"
                               fileref="images/AccountModel4.svg"/>
                </imageobject>
            </mediaobject>
        </figure>
        <section>
            <title>Accounts and Tenants</title>
            <para>
            </para>
        </section>
        <section>
            <title>Account Lifecycle</title>
            <para>
            </para>
        </section>
        <section>
            <title>Admin API</title>
            <para>
                OpenStack services &MUST; implement an <emphasis
                role="italic">admin API</emphasis>. Typically, these
                APIs are super-sets of the public API with additional
                management calls. In other words, they are
                implementations of the public API with additional
                calls to allow for the management and maintenance of
                the service. Calls who's effect span multiple accounts
                should be placed in an admin API. Admin APIs
                &SHOULD_NOT; be exposed via public endpoints and
                &SHOULD; have tighter security constraints than those
                of the public APIs. It is recommended that admin API
                users and public API users authenticate against
                separate authentication systems.
            </para>
            <para>
                In the following sections, we propose a set of calls
                that &MUST; be implemented by admin APIs in OpenStack
                and an optional set that &SHOULD; be
                implemented. Together these calls allow for a simple
                and consistent admin API for the management of
                accounts in OpenStack.
            </para>
            <section>
                <title>Required Operations</title>
                <para>
                </para>
                <section>
                    <title>Get Account</title>
                    <para>
                    </para>
                    <informaltable rules="all">
                        &LONG_URI_REFHEAD;
                        <tbody>
                            <tr>
                                <td colspan="1">&GET;
                                </td>
                                <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter></td>
                                <td colspan="3">Get Account</td>
                            </tr>
                        </tbody>
                    </informaltable>
                    <simpara>
                        &CODES;
                        <returnvalue>200</returnvalue>,
                        <returnvalue>203</returnvalue>,
                        <returnvalue>204</returnvalue>
                    </simpara>
                    <simpara>
                        &ERROR_CODES;
                        <errorcode>404</errorcode>,
                        <errorcode>410</errorcode>,
                        others &hellip;
                    </simpara>
                </section>
                <section>
                    <title>Get Account Metadata</title>
                    <para>
                    </para>
                    <informaltable rules="all">
                        &LONG_URI_REFHEAD;
                        <tbody>
                            <tr>
                                <td colspan="1">&HEAD;
                                </td>
                                <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter></td>
                                <td colspan="3">Get Account Metadata</td>
                            </tr>
                        </tbody>
                    </informaltable>
                    <simpara>
                        &CODES;
                        <returnvalue>204</returnvalue>
                    </simpara>
                    <simpara>
                        &ERROR_CODES;
                        <errorcode>404</errorcode>,
                        <errorcode>410</errorcode>,
                        others &hellip;
                    </simpara>
                </section>
                <section>
                    <title>Create an Account</title>
                    <informaltable rules="all">
                        &LONG_URI_REFHEAD;
                        <tbody>
                            <tr>
                                <td colspan="1">&PUT;
                                </td>
                                <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter></td>
                                <td colspan="3">Create an Account.</td>
                            </tr>
                        </tbody>
                    </informaltable>
                    <simpara>
                        &CODES;
                        <returnvalue>204</returnvalue>,
                        <returnvalue>200</returnvalue>,
                        <returnvalue>203</returnvalue>
                    </simpara>
                    <simpara>
                        &ERROR_CODES;
                        <errorcode>409</errorcode>,
                        others &hellip;
                    </simpara>
                    <para>
                    </para>
                </section>
                <section>
                    <title>Remove an Account</title>
                    <para>
                    </para>
                    <informaltable rules="all">
                        &LONG_URI_REFHEAD;
                        <tbody>
                            <tr>
                                <td colspan="1">&DELETE;
                                </td>
                                <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter></td>
                                <td colspan="3">Remove an Account.</td>
                            </tr>
                        </tbody>
                    </informaltable>
                    <simpara>
                        &CODES;
                        <returnvalue>204</returnvalue>
                    </simpara>
                    <simpara>
                        &ERROR_CODES;
                        <errorcode>404</errorcode>,
                        <errorcode>410</errorcode>,
                        others &hellip;
                    </simpara>
                </section>
            </section>
            <section>
                <title>Optional Operations</title>
                <para>
                </para>
                <section>
                    <title>Move a Resource</title>
                    <para>
                    </para>
                    <informaltable rules="all">
                        &LONG_URI_REFHEAD;
                        <tbody>
                            <tr>
                                <td colspan="1">&POST;
                                </td>
                                <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter>/path/to/resource/action/move?<parameter>dest</parameter>=<literal>accountId</literal></td>
                                <td colspan="3">Move a Resource</td>
                            </tr>
                        </tbody>
                    </informaltable>
                    <simpara>
                        &CODES;
                        <returnvalue>204</returnvalue>,
                        <returnvalue>202</returnvalue>
                    </simpara>
                    <simpara>
                        &ERROR_CODES;
                        <errorcode>404</errorcode>,
                        <errorcode>410</errorcode>,
                        others &hellip;
                    </simpara>
                </section>
                <section>
                    <title>Move all Resources</title>
                    <para>
                    </para>
                    <informaltable rules="all">
                        &LONG_URI_REFHEAD;
                        <tbody>
                            <tr>
                                <td colspan="1">&POST;
                                </td>
                                <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter>/action/move?<parameter>dest</parameter>=<literal>accountId</literal></td>
                                <td colspan="3">Moves all resources into a destination account.</td>
                            </tr>
                        </tbody>
                    </informaltable>
                    <simpara>
                        &CODES;
                        <returnvalue>204</returnvalue>,
                        <returnvalue>202</returnvalue>
                    </simpara>
                    <simpara>
                        &ERROR_CODES;
                        <errorcode>404</errorcode>,
                        <errorcode>410</errorcode>,
                        others &hellip;
                    </simpara>
                </section>
                <section>
                    <title>Ensuring Consistency</title>
                    <para>
                    </para>
                    <section>
                        <title>Get a Move Action</title>
                        <para>
                        </para>
                        <informaltable rules="all">
                            &LONG_URI_REFHEAD;
                            <tbody>
                                <tr>
                                    <td colspan="1">&GET;
                                    </td>
                                    <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter>/path/to/resource/action/move?<parameter>dest</parameter>=<literal>accountId</literal></td>
                                    <td colspan="3">Get resource move action.</td>
                                </tr>
                                <tr>
                                    <td colspan="1">&GET;
                                    </td>
                                    <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter>/action/move?<parameter>dest</parameter>=<literal>accountId</literal></td>
                                    <td colspan="3">Get all resource move action.</td>
                                </tr>
                            </tbody>
                        </informaltable>
                        <simpara>
                            &CODES;
                            <returnvalue>200</returnvalue>,
                            <returnvalue>203</returnvalue>
                        </simpara>
                        <simpara>
                            &ERROR_CODES;
                            <errorcode>404</errorcode>,
                            <errorcode>410</errorcode>,
                            <errorcode>409</errorcode>,
                            others &hellip;
                        </simpara>
                    </section>
                    <section>
                        <title>Conditional Move</title>
                        <para>
                        </para>
                        <informaltable rules="all">
                            &LONG_URI_REFHEAD;
                            <tbody>
                                <tr>
                                    <td colspan="1">&POST;
                                    </td>
                                    <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter>/path/to/resource/action/move?<parameter>dest</parameter>=<literal>accountId</literal></td>
                                    <td colspan="3">Perform a conditional move operation on a resource..</td>
                                </tr>
                                <tr>
                                    <td colspan="1">&POST;
                                    </td>
                                    <td colspan="4">/<parameter>version</parameter>/<parameter>accountId</parameter>/action/move?<parameter>dest</parameter>=<literal>accountId</literal></td>
                                    <td colspan="3">Perform a conditional move operation on all resources.</td>
                                </tr>
                            </tbody>
                        </informaltable>
                        <simpara>
                            &CODES;
                            <returnvalue>200</returnvalue>,
                            <returnvalue>203</returnvalue>
                        </simpara>
                        <simpara>
                            &ERROR_CODES;
                            <errorcode>404</errorcode>,
                            <errorcode>410</errorcode>,
                            <errorcode>409</errorcode>,
                            <errorcode>412</errorcode>,
                            others &hellip;
                        </simpara>
                    </section>
                </section>
            </section>
        </section>
    </section>
    <section>
        <title>Questions and Answers</title>
        <qandaset defaultlabel="number">
            <qandaentry>
                <question>
                    <para>
                    </para>
                </question>
                <answer>
                    <para>
                    </para>
                </answer>
            </qandaentry>
        </qandaset>
    </section>
</article>
